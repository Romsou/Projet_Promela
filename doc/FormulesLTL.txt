p[0] = berger
p[1] = loup
p[2] = mouton
p[3] = chou

Propriété que l'exécution doit vérifier:
    1. On ne veut jamais que le loup et le mouton soient sur la même rive sans le berger
    2. On ne veut jamais que le mouton et le chou soient sur la même rive sans le berger
    3. On ne veut jamais que le berger fasse indéfiniment le voyage de la rive gauche à la rive droite


1. Si le loup et le mouton sont sur la même rive, alors le berger aussi:
    ((p[1]==p[2]) -> (p[0]==p[1]))

2. Si le mouton et le chou sont sur la même rive, alors le berger aussi:
    ((p[2] == p[3]) -> (p[0]==p[2]))

3. Tout le monde est sur la rive droite
    (p[0] && p[1] && p[2] && p[3])

Formule LTL:
    (((p[1] == p[2]) -> (p[0] == p[1])) && ((p[2] == p[3]) -> (p[0] == p[2]))) U (p[0] && p[1] && p[2] && p[3])
